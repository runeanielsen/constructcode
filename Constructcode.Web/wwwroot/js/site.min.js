(function () {
    "use strict"; function n() { var n = this; return n.getDefaultApiRoute = "/api/", n }
    angular.module("app").service("apiConfigService", n)
})(),
function () { "use strict"; angular.module("app", ["ngSanitize", "ngDialog", "ui.tinymce"]) }(),
function () {
    "use strict"; function n() { }
    angular.module("app").controller("ManageAccountController", n)
}(),
function () {
    "use strict"; function n(n, t) {
        function r() { t.getAllPosts().then(function (n) { i.posts = n.data }) }
        var i = this; i.posts = []; i.redirect = n; r()
    }
    angular.module("app").controller("AdminController", n)
}(),
function () {
    "use strict"; function n() {
        var n = this; return n.tinymceOptions = { inline: !1, plugins: "advlist autolink lists link image charmap preview hr anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking save table contextmenu directionality template paste textcolor colorpicker textpattern imagetools codesample toc", toolbar1: "undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent", toolbar2: "link image preview media | forecolor backcolor | codesample", image_advtab: !0, height: "calc(100vh - 275px)" },
        n
    }
    angular.module("app").service("tinymceConfigService", n)
}(),
function () {
    "use strict"; function n() {
        function t(n) { window.location.href = n }
        var n = this; return n.home = function (n) { var i = "/"; return n ? t(i) : i },
        n.admin = function (n) { var i = "/admin"; return n ? t(i) : i },
        n.createPost = function (n) { var i = "/admin/post/createpost"; return n ? t(i) : i },
        n.editPost = function (n, i) { var r = "/admin/post/editpost/" + n; return i ? t(r) : r },
        n.manageAccount = function (n) { var i = "/admin/account/manage"; return n ? t(i) : i },
        n.displayPost = function (n, i) { var r = "/post/" + n; return i ? t(r) : r },
        n.displayPostOnCategory = function (n, i) {
            var r = "/post/category/" + n.toLowerCase();
            return i ? t(r) : r
        },
        n
    }
    angular.module("app").service("redirectService", n)
}(),
function () {
    "use strict"; function n() {
        var n = this; return n.getLastUrlParameter = function () { return window.location.href.substr(window.location.href.lastIndexOf("/") + 1) },
        n
    }
    angular.module("app").service("urlService", n)
}(),
function () {
    "use strict"; function n(n, t) {
        function r() { n.getAllPosts().then(function (n) { i.posts = n.data }) }
        var i = this; i.posts = []; i.redirect = t; r()
    }
    angular.module("app").controller("FrontPageController", n)
}(),
function () {
    "use strict"; function n() {
        return {
            scope: { file: "=fileInput" },
            link: function (n, t) { t.bind("change", function (t) { n.file = (t.srcElement || t.target).files[0]; n.$apply() }) }
        }
    }
    angular.module("app").directive("fileInput", n)
}(),
function () {
    "use strict"; function n(n, t) {
        var i = this, r = t.getDefaultApiRoute + "post/"; return i.uploadImage = function (t) { return n({ method: "POST", url: r + "UploadPostImage", data: t, headers: { "Content-Type": undefined } }) },
        i
    }
    angular.module("app").service("imageService", n)
}(),
function () {
    "use strict"; function n(n) {
        var t = this; t.uploadedImagePath = ""; t.uploadImage = function () {
            var i = new FormData; i.append("file", t.file);
            n.uploadImage(i).then(function (n) { t.uploadedImagePath = n.data })
        }
    }
    angular.module("app").controller("UploadImageController", n)
}(),
function () {
    "use strict"; function n() {
        function n(n, t, i) {
            function u() { e() }
            function f() { angular.forEach(r.post.postCategories, function (n) { r.categories.filter(t=>t.id === n.categoryId)[0].selected = !0 }) }
            function e() { n.getAllCategories().then(function (n) { r.categories = n.data; f() }) }
            var r = this; r.categories = []; r.post = {};
            r.redirect = i; u();
            r.createCategory = function () {
                var t = window.prompt("Insert category name", ""),
                i; $.trim(t) !== "" && (i = { title: t },
                n.createCategory(i).then(function (n) { r.categories.push(n.data) },
                function (n) { alert(n.data) }))
            };
            r.uploadImage = function () { t.open({ template: "/templates/upload-image.template.html", className: "ngdialog-theme-default", controller: "UploadImageController as vm" }) };
            r.editCategory = function (t) {
                var i = window.prompt("Insert category name", "");
                $.trim(i) !== "" && n.editCategory({ title: i, id: t.id }).then(function () { t.title = i },
                function (n) { alert(n.data) })
            };
            r.deleteCategory = function (t) { n.deleteCategory(t.id).then(function () { r.categories = r.categories.filter(n=>n !== t) }) };
            r.updatePostCategories = function () {
                r.post.postCategories = []; angular.forEach(r.categories.filter(n=>n.selected),
                function (n) { r.post.postCategories.push({ postId: r.post.id, categoryId: n.id }) })
            }
        }
        return {
            bindings: { post: "=" },
            templateUrl: "/js/post/components/side-menu.template.html", controllerAs: "vm", controller: n
        }
    }
    angular.module("app").component("sideMenu", n())
}(),
function () {
    "use strict"; function n(n, t, i) {
        var r = this; r.tinymceOptions = i.tinymceOptions; r.post = { title: "", content: "", postCategories: [] };
        r.createPost = function () {
            n.createPost(r.post).then(function () { t.admin(!0) },
            function (n) { alert(n.data) })
        }
    }
    angular.module("app").controller("CreatePostController", n)
}(),
function () {
    "use strict"; function n(n, t, i, r) {
        function f() { r.getPostOnUrl(t.getLastUrlParameter()).then(function (n) { u.post = n.data }) }
        var u = this; u.post = {};
        u.redirect = i; f();
        u.trustAsHtml = function () { return n.trustAsHtml(u.post.content) }
    }
    angular.module("app").controller("DisplayPostController", n)
}(),
function () {
    "use strict"; function n(n, t, i, r) {
        function f() { e() }
        function e() { n.getPostOnId(t.getLastUrlParameter()).then(function (n) { u.post = n.data }) }
        var u = this; u.post = null; u.tinymceOptions = r.tinymceOptions; f();
        u.savePost = function () {
            n.updatePost(u.post).then(function () { i.admin(!0) },
            function (n) { alert(n.data) })
        };
        u.deletePost = function () { n.deletePost(u.post.id).then(function () { i.admin(!0) }) }
    }
    angular.module("app").controller("EditPostController", n)
}(),
function () {
    "use strict"; function n(n, t, i) {
        function u() {
            var t = i.getLastUrlParameter();
            n.getAllPostsOnCategory(t).then(function (n) { r.posts = n.data })
        }
        var r = this; r.posts = []; r.redirect = t; u()
    }
    angular.module("app").controller("PostOnCategoryController", n)
}(),
function () {
    "use strict"; function n(n, t) {
        var i = this, r = t.getDefaultApiRoute + "category/"; return i.createCategory = function (t) { return n.post(r + "create", t) },
        i.getAllCategories = function () { return n.get(r + "getAll") },
        i.editCategory = function (t) { return n.post(r + "edit", t) },
        i.deleteCategory = function (t) { return n.delete(r + "delete/" + t) },
        i
    }
    angular.module("app").service("categoryService", n)
}(),
function () {
    "use strict"; function n(n, t) {
        var i = this, r = t.getDefaultApiRoute + "post/"; return i.getAllPosts = function () { return n.get(r + "getAllPosts") },
        i.getAllPostsOnCategory = function (t) { return n.get(r + "getAllPostsOnCategory/" + t) },
        i.getPostOnId = function (t) { return n.get(r + "getPost/" + t) },
        i.getPostOnUrl = function (t) { return n.get(r + "getPostOnUrl/" + t) },
        i.deletePost = function (t) { return n.delete(r + "deletePost/" + t) },
        i.createPost = function (t) { return n.post(r + "createPost", t) },
        i.updatePost = function (t) { return n.post(r + "updatePost", t) },
        i
    }
    angular.module("app").service("postService", n)
}();
