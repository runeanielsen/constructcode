(function(){"use strict";angular.module("app",["ngSanitize","ngDialog","ui.tinymce"])})(),function(){"use strict";function fileInput(){return{scope:{file:"=fileInput"},link:function(scope,element){element.bind("change",function(e){scope.file=(e.srcElement||e.target).files[0];scope.$apply()})}}}angular.module("app").directive("fileInput",fileInput)}(),function(){"use strict";function postService($http,apiConfigService){var service=this,serviceRoute=apiConfigService.getDefaultApiRoute+"post/";return service.getAllPosts=function(){return $http.get(serviceRoute+"getAllPosts")},service.getAllPostsOnCategory=function(categoryName){return $http.get(serviceRoute+"getAllPostsOnCategory/"+categoryName)},service.getPostOnId=function(id){return $http.get(serviceRoute+"getPost/"+id)},service.getPostOnUrl=function(url){return $http.get(serviceRoute+"getPostOnUrl/"+url)},service.deletePost=function(id){return $http.delete(serviceRoute+"deletePost/"+id)},service.createPost=function(post){return $http.post(serviceRoute+"createPost",post)},service.updatePost=function(post){return $http.post(serviceRoute+"updatePost",post)},service}angular.module("app").service("postService",postService)}(),function(){"use strict";function categoryService($http,apiConfigService){var service=this,serviceRoute=apiConfigService.getDefaultApiRoute+"category/";return service.createCategory=function(category){return $http.post(serviceRoute+"create",category)},service.getAllCategories=function(){return $http.get(serviceRoute+"getAll")},service.editCategory=function(category){return $http.post(serviceRoute+"edit",category)},service.deleteCategory=function(categoryId){return $http.delete(serviceRoute+"delete/"+categoryId)},service}angular.module("app").service("categoryService",categoryService)}(),function(){"use strict";function apiConfigService(){var service=this;return service.getDefaultApiRoute="/api/",service}angular.module("app").service("apiConfigService",apiConfigService)}(),function(){"use strict";function redirectService(){function redirect(url){window.location.href=url}var service=this;return service.home=function(shouldRedirect){var url="/";return shouldRedirect?redirect(url):url},service.admin=function(shouldRedirect){var url="/admin";return shouldRedirect?redirect(url):url},service.createPost=function(shouldRedirect){var url="/admin/post/createpost";return shouldRedirect?redirect(url):url},service.editPost=function(id,shouldRedirect){var url="/admin/post/editpost/"+id;return shouldRedirect?redirect(url):url},service.manageAccount=function(shouldRedirect){var url="/admin/account/manage";return shouldRedirect?redirect(url):url},service.displayPost=function(urlParameter,shouldRedirect){var url="/post/"+urlParameter;return shouldRedirect?redirect(url):url},service.displayPostOnCategory=function(urlParameter,shouldRedirect){var url="/post/category/"+urlParameter.toLowerCase();return shouldRedirect?redirect(url):url},service}angular.module("app").service("redirectService",redirectService)}(),function(){"use strict";function urlService(){var service=this;return service.getLastUrlParameter=function(){return window.location.href.substr(window.location.href.lastIndexOf("/")+1)},service}angular.module("app").service("urlService",urlService)}(),function(){"use strict";function sideMenuService(categoryService,ngDialog){function init(){getAllCategories()}function getAllCategories(){categoryService.getAllCategories().then(function(response){setupSideMenuCategory(response.data)})}function setupSideMenuCategory(categories){angular.forEach(categories,function(category){insertSideMenuCategory(category)})}function insertSideMenuCategory(category){service.categories.push({title:category.title,id:category.id,selected:!1})}var service=this;service.categories=[];init();service.createCategory=function(){var categoryName=window.prompt("Insert category name",""),category;$.trim(categoryName)!==""&&(category={title:categoryName},categoryService.createCategory(category).then(function(response){insertSideMenuCategory(response.data)},function(response){alert(response.data)}))};service.uploadImage=function(){ngDialog.open({template:"/templates/upload-image.template.html",className:"ngdialog-theme-default",controller:"UploadImageController as vm"})};service.editCategory=function(category){var categoryName=window.prompt("Insert category name","");$.trim(categoryName)!==""&&categoryService.editCategory({title:categoryName,id:category.id}).then(function(){category.title=categoryName},function(response){alert(response.data)})};service.deleteCategory=function(category){categoryService.deleteCategory(category.id).then(function(){service.categories=service.categories.filter(item=>item!==category)})}}angular.module("app").service("sideMenuService",sideMenuService)}(),function(){"use strict";function imageService($http,apiConfigService){var service=this,serviceRoute=apiConfigService.getDefaultApiRoute+"post/";return service.uploadImage=function(imageFile){return $http({method:"POST",url:serviceRoute+"UploadPostImage",data:imageFile,headers:{"Content-Type":undefined}})},service}angular.module("app").service("imageService",imageService)}(),function(){"use strict";function tinymceConfigService(){var service=this;return service.tinymceOptions={inline:!1,plugins:"advlist autolink lists link image charmap preview hr anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking save table contextmenu directionality emoticons template paste textcolor colorpicker textpattern imagetools codesample toc",toolbar1:"undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",toolbar2:"preview media | forecolor backcolor emoticons | codesample",image_advtab:!0,skin:"lightgray",theme:"modern",autoresize_max_height:600},service}angular.module("app").service("tinymceConfigService",tinymceConfigService)}(),function(){"use strict";function AdminController(redirectService,postService){function init(){postService.getAllPosts().then(function(response){vm.posts=response.data})}var vm=this;vm.posts=[];vm.redirect=redirectService;init()}angular.module("app").controller("AdminController",AdminController)}(),function(){"use strict";function CreatePostController(postService,categoryService,sideMenuService,redirectService,tinymceConfigService){function insertSelectedCategoriesOnPost(){createPostCategories(vm.sideMenu.categories.filter(c=>c.selected))}function createPostCategories(selectedCategories){$.each(selectedCategories,function(index,category){vm.post.postCategories.push({categoryId:category.id})})}var vm=this;vm.sideMenu=sideMenuService;vm.tinymceOptions=tinymceConfigService.tinymceOptions;vm.post={title:"",content:"",postCategories:[]};vm.createPost=function(){insertSelectedCategoriesOnPost();postService.createPost(vm.post).then(function(){redirectService.admin(!0)},function(response){alert(response.data)})}}angular.module("app").controller("CreatePostController",CreatePostController)}(),function(){"use strict";function EditPostController(postService,categoryService,urlService,sideMenuService,redirectService,tinymceConfigService){function init(){retrievePost()}function retrievePost(){postService.getPostOnId(urlService.getLastUrlParameter()).then(function(response){vm.post=response.data;mapSelectedCategories()})}function mapSelectedCategories(){angular.forEach(vm.sideMenu.categories,function(sideMenuCategory){vm.post.postCategories.filter(pc=>pc.categoryId===sideMenuCategory.id).length>0&&(sideMenuCategory.selected=!0)})}function insertSelectedCategoriesOnPost(){vm.post.postCategories=[];updatePostCategories(vm.sideMenu.categories.filter(c=>c.selected))}function updatePostCategories(selectedCategories){$.each(selectedCategories,function(index,category){vm.post.postCategories.push({categoryId:category.id,postId:vm.post.id})})}var vm=this;vm.post={};vm.sideMenu=sideMenuService;vm.tinymceOptions=tinymceConfigService.tinymceOptions;init();vm.savePost=function(){insertSelectedCategoriesOnPost();postService.updatePost(vm.post).then(function(){redirectService.admin(!0)},function(response){alert(response.data)})};vm.deletePost=function(){postService.deletePost(vm.post.id).then(function(){redirectService.admin(!0)})}}angular.module("app").controller("EditPostController",EditPostController)}(),function(){"use strict";function FrontPageController(postService,redirectService){function init(){postService.getAllPosts().then(function(response){vm.posts=response.data})}var vm=this;vm.posts=[];vm.redirect=redirectService;init()}angular.module("app").controller("FrontPageController",FrontPageController)}(),function(){"use strict";function DisplayPostController($sce,urlService,redirectService,postService){function init(){postService.getPostOnUrl(urlService.getLastUrlParameter()).then(function(response){vm.post=response.data})}var vm=this;vm.post={};vm.redirect=redirectService;init()}angular.module("app").controller("DisplayPostController",DisplayPostController)}(),function(){"use strict";function UploadImageController(imageService){var vm=this;vm.uploadedImagePath="";vm.uploadImage=function(){var formData=new FormData;formData.append("file",vm.file);imageService.uploadImage(formData).then(function(response){vm.uploadedImagePath=response.data})}}angular.module("app").controller("UploadImageController",UploadImageController)}(),function(){"use strict";function PostOnCategoryController(postService,redirectService,urlService){function init(){var lastUrlParameter=urlService.getLastUrlParameter();postService.getAllPostsOnCategory(lastUrlParameter).then(function(response){vm.posts=response.data})}var vm=this;vm.posts=[];vm.redirect=redirectService;init()}angular.module("app").controller("PostOnCategoryController",PostOnCategoryController)}();